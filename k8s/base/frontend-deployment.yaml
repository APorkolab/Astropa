apiVersion: apps/v1
kind: Deployment
metadata:
  name: astropa-frontend
  namespace: astropa
  labels:
    app: astropa
    component: frontend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: astropa
      component: frontend
  template:
    metadata:
      labels:
        app: astropa
        component: frontend
        version: v1
    spec:
      serviceAccountName: astropa-frontend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: frontend
        image: ghcr.io/yourusername/astropa-2/frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: config
        configMap:
          name: astropa-frontend-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: astropa-frontend
  namespace: astropa
  labels:
    app: astropa
    component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: astropa
    component: frontend

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: astropa-frontend
  namespace: astropa
  labels:
    app: astropa
    component: frontend

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: astropa-frontend-pdb
  namespace: astropa
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: astropa
      component: frontend