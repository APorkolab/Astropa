apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: astropa-ingress
  namespace: astropa
  labels:
    app: astropa
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # CORS settings
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://astropa.yourdomain.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # Security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' https:;";
    
    # SSL/TLS configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - astropa.yourdomain.com
    secretName: astropa-tls
  rules:
  - host: astropa.yourdomain.com
    http:
      paths:
      # API routes
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: astropa-backend
            port:
              number: 8080
      # Health check for backend
      - path: /actuator/health
        pathType: Prefix
        backend:
          service:
            name: astropa-backend
            port:
              number: 8080
      # Swagger UI
      - path: /swagger-ui
        pathType: Prefix
        backend:
          service:
            name: astropa-backend
            port:
              number: 8080
      - path: /v3/api-docs
        pathType: Prefix
        backend:
          service:
            name: astropa-backend
            port:
              number: 8080
      # Frontend routes (catch-all)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: astropa-frontend
            port:
              number: 80

---
# ClusterIssuer for Let's Encrypt SSL certificates
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@yourdomain.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx

---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: astropa-network-policy
  namespace: astropa
spec:
  podSelector:
    matchLabels:
      app: astropa
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from nginx-ingress
  - from:
    - namespaceSelector:
        matchLabels:
          name: nginx-ingress
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 80
  # Allow ingress within namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: astropa
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 3306
    - protocol: TCP
      port: 6379
  # Allow monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow HTTPS
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow internal communication
  - to:
    - podSelector:
        matchLabels:
          app: astropa
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 3306
    - protocol: TCP
      port: 6379